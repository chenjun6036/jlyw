1、jquery.uploadify-3.1.js中添加了自己修改的部分代码（可搜索alert）
2、Uploadify V3.1仅用于TaskTime.jsp中批量上传原始记录Excel，其后台处理表单域与V2.1.4版本有很大不同！(不能直接request.getParameter)

获取方法
public class ImportData extends HttpServlet {  
  
    /** 
     *  
     */  
    private static final long serialVersionUID = 3387249060639006401L;  
      
    private static final Logger logger = Logger.getLogger(ImportData.class);  
    public void doGet(HttpServletRequest request, HttpServletResponse response)  
            throws ServletException, IOException {  
        logger.debug("doGet(HttpServletRequest request, HttpServletResponse response)");  
        String typeCode =""; //兑换卷类型  
          
        String savePath = this.getServletConfig().getServletContext().getRealPath("");  
        savePath = savePath + "/uploads/";  
        File f1 = new File(savePath);  
        System.out.println(savePath);  
        if (!f1.exists()) {  
            f1.mkdirs();  
        }  
        DiskFileItemFactory fac = new DiskFileItemFactory();  
        ServletFileUpload upload = new ServletFileUpload(fac);  
        upload.setHeaderEncoding("utf-8");  
        List<FileItem> fileList = null;  
        try {  
            fileList = upload.parseRequest(request);  
        } catch (FileUploadException ex) {  
            return;  
        }  
        Iterator<FileItem> it = fileList.iterator();  
        String name = "";  
        String extName = "";  
        while (it.hasNext()) {  
            FileItem item = it.next();  
            logger.debug(item.getContentType());  
            if (!item.isFormField()) {  
                name = item.getName();  
                long size = item.getSize();  
                String type = item.getContentType();  
                logger.debug("文件名："+name+",大小："+size + ",类型：" + type);  
                if (name == null || name.trim().equals("")) {  
                    continue;  
                }  
                //扩展名格式：    
                if (name.lastIndexOf(".") >= 0) {  
                    extName = name.substring(name.lastIndexOf("."));  
                }  
                File file = null;  
                do {  
                    //生成文件名：  
                    name = UUID.randomUUID().toString();  
                    file = new File(savePath + name + extName);  
                } while (file.exists());  
                File saveFile = new File(savePath + name + extName);  
                try {  
                    item.write(saveFile);  
                } catch (Exception e) {  
                    e.printStackTrace();  
                }  
            }else  
            {  
                //获得简单域的名字    
                String fieldName = item.getFieldName();   
                if (fieldName.equalsIgnoreCase("typeCode"))  
                {  
                    //获得简单域的值    
                    String fieldValue = item.getString("UTF-8");   
                    typeCode = fieldValue;  
                    logger.debug("兑换卷类型是："+typeCode);  
                }  
                  
            }  
        }  
        response.getWriter().print(name + extName);  
  
    }  
  
    // Process the HTTP Post request  
    public void doPost(HttpServletRequest request, HttpServletResponse response)  
            throws ServletException, IOException {  
        doGet(request, response);  
    }  
}  